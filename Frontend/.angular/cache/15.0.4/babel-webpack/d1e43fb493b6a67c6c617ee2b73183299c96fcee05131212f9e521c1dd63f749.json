{"ast":null,"code":"import _asyncToGenerator from \"C:/full-stack/angular/MAEN-Stuck/test 4/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllTasks() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const ovsarvabel = _this.http.get(appConfig.tasksUrl);\n      const tasks = yield firstValueFrom(ovsarvabel);\n      return tasks;\n    })();\n  }\n  getAllCustomers() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const ovsarvabel = _this2.http.get(appConfig.customerUrl);\n      const customers = yield firstValueFrom(ovsarvabel);\n      return customers;\n    })();\n  }\n  addTask(newtask) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const ovsarvabel = _this3.http.post(appConfig.tasksUrl, newtask);\n      const addedTask = yield firstValueFrom(ovsarvabel);\n      return addedTask;\n    })();\n  }\n  deleteTask(_id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const ovsarvabel = _this4.http.delete(appConfig.tasksUrl + _id);\n      yield firstValueFrom(ovsarvabel);\n    })();\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,cAAc,QAAQ,MAAM;;;AAMrC,OAAM,MAAOC,WAAW;EAEpBC,YAA2BC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAElCC,WAAW;IAAA;IAAA;MACpB,MAAMC,UAAU,GAAG,KAAI,CAACF,IAAI,CAACG,GAAG,CAAeP,SAAS,CAACQ,QAAQ,CAAC;MAClE,MAAMC,KAAK,SAASR,cAAc,CAACK,UAAU,CAAC;MAC9C,OAAQG,KAAK;IAAC;EAClB;EAEaC,eAAe;IAAA;IAAA;MACxB,MAAMJ,UAAU,GAAG,MAAI,CAACF,IAAI,CAACG,GAAG,CAAkBP,SAAS,CAACW,WAAW,CAAC;MACxE,MAAMC,SAAS,SAASX,cAAc,CAACK,UAAU,CAAC;MAClD,OAAQM,SAAS;IAAC;EACtB;EAEaC,OAAO,CAACC,OAAmB;IAAA;IAAA;MACpC,MAAMR,UAAU,GAAG,MAAI,CAACF,IAAI,CAACW,IAAI,CAAaf,SAAS,CAACQ,QAAQ,EAAEM,OAAO,CAAC;MAC1E,MAAME,SAAS,SAASf,cAAc,CAACK,UAAU,CAAC;MAClD,OAAQU,SAAS;IAAC;EACtB;EAEaC,UAAU,CAACC,GAAW;IAAA;IAAA;MAC/B,MAAMZ,UAAU,GAAG,MAAI,CAACF,IAAI,CAACe,MAAM,CAAOnB,SAAS,CAACQ,QAAQ,GAAGU,GAAG,CAAC;MACnE,MAAMjB,cAAc,CAACK,UAAU,CAAC;IAAA;EACpC;;AAzBSJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFR;AAAM","names":["appConfig","firstValueFrom","DataService","constructor","http","getAllTasks","ovsarvabel","get","tasksUrl","tasks","getAllCustomers","customerUrl","customers","addTask","newtask","post","addedTask","deleteTask","_id","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\full-stack\\angular\\MAEN-Stuck\\test 4\\Frontend\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TasksModel } from '../models/tasks-model';\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from 'rxjs';\nimport { CustomerModel } from '../models/customers-model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    public constructor(private http: HttpClient) { }\n\n    public async getAllTasks(): Promise<TasksModel[]> {\n        const ovsarvabel = this.http.get<TasksModel[]>(appConfig.tasksUrl)\n        const tasks = await firstValueFrom(ovsarvabel)\n        return (tasks)        \n    }\n\n    public async getAllCustomers(): Promise<CustomerModel[]> {\n        const ovsarvabel = this.http.get<CustomerModel[]>(appConfig.customerUrl)\n        const customers = await firstValueFrom(ovsarvabel)\n        return (customers)        \n    }\n\n    public async addTask(newtask: TasksModel): Promise<TasksModel> {\n        const ovsarvabel = this.http.post<TasksModel>(appConfig.tasksUrl, newtask)\n        const addedTask = await firstValueFrom(ovsarvabel)\n        return (addedTask)        \n    }\n\n    public async deleteTask(_id: string): Promise<void> {\n        const ovsarvabel = this.http.delete<void>(appConfig.tasksUrl + _id)\n        await firstValueFrom(ovsarvabel)\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}